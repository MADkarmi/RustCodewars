fn comp(mut a: Vec<i64>, mut b: Vec<i64>) -> bool {
    a = a.iter().map(|x| x.pow(2)).collect::<Vec<i64>>();
    a.sort();
    b.sort();
    a == b
}
fn main() {
    println!("{:?}", comp(vec![121, 144, 19, 161, 19, 144, 19, 11], vec![11*11, 121*121, 144*144, 19*19, 161*161, 19*19, 144*144, 19*19]));
}

#[test]
fn test() {
    assert_eq!(comp(vec![121, 144, 19, 161, 19, 144, 19, 11], vec![11*11, 121*121, 144*144, 19*19, 161*161, 19*19, 144*144, 19*19]), true);
}

#[test]
fn test1() {
    assert_eq!(comp(vec![121, 144, 19, 161, 19, 144, 19, 11], vec![11*21, 121*121, 144*144, 19*19, 161*161, 19*19, 144*144, 19*19]), false);
}

#[test]
fn test2() {
    assert_eq!(comp(vec![90, 58, 96, 32, 19, 1, 0], vec![8101, 3364, 9216, 1024, 361, 1, 0]), false);
}

#[test]
fn test3() {
    assert_eq!(comp(vec![90, 58, 96, 32, 19, 1, 0], vec![8100, 3365, 9216, 1024, 361, 1, 0]), false);
}


#[test]
fn test4() {
    assert_eq!(comp(vec![68, 60, 75, 29, 41, 89, 26, 84, 92], vec![46241, 3600, 5625, 841, 1681, 7921, 676, 7056, 8464]), false);
}